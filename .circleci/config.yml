# circleCI build file
version: 2
jobs:
  build:
    docker:
      # docker image with python and mkdocs on it already as well, based on gradle:4.6-alpine
      - image: yakworks/alpine-java:gradle-4.10.3
    #    branches:
    #      only:
    #        - master

    # working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      # JVM_OPTS: -Xmx3200m
      MALLOC_ARENA_MAX: 2
      GRADLE_OPTS: "-Xmx3048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dorg.gradle.daemon=false" #daemon false doesn't seem to get picked up by fork
      TERM: dumb

    parallelism: 1
    # resource_class: large

    steps:
      - checkout
      # Download and cache dependencies
      - run:
          name: cat build.gradle files for cache key
          command: cat gradle.properties build.gradle plugin/build.gradle examples/free-app/build.gradle > cache-checksum.tmp
      - restore_cache:
          keys:
            - gradle-{{ checksum "cache-checksum.tmp" }}

      # see https://github.com/palantir/gradle-configuration-resolver-plugin
      # this also kind of helps with the memory issue we keep running into by breaking it up
      - run:
          name: ✔︎ -- Downloads Dependencies [gradle resolveConfigurations]
          command: gradle resolveConfigurations --no-daemon

      # compiling as a seperate step before running check helps with the "finished with non-zero exit value 137" error
      - run:
          name: ✔︎ -- Compile [gradle classes]
          command: gradle classes --no-daemon

      - save_cache:
          paths:
            - /home/gradle # the https://hub.docker.com/_/gradle/ containter does wierd stuff for cache
            - ~/.m2
            - ~/.gradle
          key: gradle-{{ checksum "cache-checksum.tmp" }}

      - run:
          name: ✔︎ -- Checks Linter and Tests [gradle check]
          command: gradle check --no-daemon --max-workers 2
      - store_artifacts:
          path: plugin/build/reports/tests/test/
          destination: test-reports/unit/
      - store_artifacts:
          path: plugin/build/reports/codenarc/
          destination: codenarc/
      - store_test_results:
          path: plugin/build/test-results
      - store_artifacts:
          path: examples/free-app/build/reports/tests
          destination: test-reports/integration
      - store_test_results:
          path: examples/free-app/build/test-results

      ### Finally do the build and publish. ciPublish will check if this is a PR or on a branch that should not be published
      - run:
          name: ✔︎ -- Publish Library if needed [gradle ciPublish]
          command: gradle ciPublish --no-daemon


